version: '3.9'
services:
  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1:
    image: ${KAFKA_IMAGE}
    container_name: kafka1
    ports:
      - "8097:8097"
      - "29097:29097"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://localhost:8097,DOCKER://host.docker.internal:29097
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${REPLICATION_FACTOR}
    depends_on:
      - zookeeper

  init-kafka:
    image: ${KAFKA_IMAGE}
    depends_on:
      - zookeeper
      - kafka1
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka1:29097 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka1:29097 --create --if-not-exists --topic task1-1 --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka1:29097 --create --if-not-exists --topic task1-2 --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka1:29097 --create --if-not-exists --topic task2 --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka1:29097 --create --if-not-exists --topic task3-1 --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka1:29097 --create --if-not-exists --topic task3-2 --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka1:29097 --create --if-not-exists --topic task4 --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka1:29097 --list
      "
